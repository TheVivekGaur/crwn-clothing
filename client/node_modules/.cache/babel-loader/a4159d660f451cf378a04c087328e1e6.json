{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useRef } from 'react';\nconst config = {\n  apiKey: \"AIzaSyB4agIEENF8c59jEMMre45FDPQSbeV1nOo\",\n  authDomain: \"crwn-clothing-db-9f9e8.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-9f9e8.firebaseio.com\",\n  projectId: \"crwn-clothing-db-9f9e8\",\n  storageBucket: \"crwn-clothing-db-9f9e8.appspot.com\",\n  messagingSenderId: \"399378743825\",\n  appId: \"1:399378743825:web:c2cba472cda34081f4a7b0\",\n  measurementId: \"G-FQY7PK82WE\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await useRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","useRef","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAsB,cAAtB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,OAAvB;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,wCAFE;AAGdC,EAAAA,WAAW,EAAE,+CAHC;AAIdC,EAAAA,SAAS,EAAE,wBAJG;AAKdC,EAAAA,aAAa,EAAE,oCALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC7E,MAAG,CAACD,QAAJ,EAAe;AAEf,QAAME,OAAO,GAAIC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAjB;AAEA,QAAMC,QAAQ,GAAI,MAAMjB,MAAM,CAACkB,GAAP,EAAxB;;AAEC,MAAG,CAACD,QAAQ,CAACE,MAAb,EACA;AACI,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGV;AAJc,OAAZ,CAAN;AAMJ,KAPD,CAOE,OAAOa,KAAP,EACF,CAEC;AACJ;AACD,CAxBM;AAyBP1B,QAAQ,CAAC2B,aAAT,CAAuBzB,MAAvB;AAEA,OAAO,MAAM0B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AAEP,OAAO,MAAMb,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMc,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from  'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { useRef } from 'react';\r\n\r\nconst config = {\r\n apiKey: \"AIzaSyB4agIEENF8c59jEMMre45FDPQSbeV1nOo\",\r\n authDomain: \"crwn-clothing-db-9f9e8.firebaseapp.com\",\r\n databaseURL: \"https://crwn-clothing-db-9f9e8.firebaseio.com\",\r\n projectId: \"crwn-clothing-db-9f9e8\",\r\n storageBucket: \"crwn-clothing-db-9f9e8.appspot.com\",\r\n messagingSenderId: \"399378743825\",\r\n appId: \"1:399378743825:web:c2cba472cda34081f4a7b0\",\r\n measurementId: \"G-FQY7PK82WE\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\nif(!userAuth)  return ;\r\n\r\nconst userRef =  firestore.doc(`users/${userAuth.uid}`);\r\n\r\nconst snapShot =  await useRef.get();\r\n\r\n if(!snapShot.exists)\r\n {\r\n     const { displayName, email} = userAuth;\r\n     const createdAt = new Date ();\r\n\r\n     try {\r\n          await userRef.set({\r\n           displayName,\r\n           email,\r\n           createdAt,\r\n           ...additionalData\r\n          })\r\n     } catch (error)\r\n     {\r\n\r\n     }\r\n }\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}