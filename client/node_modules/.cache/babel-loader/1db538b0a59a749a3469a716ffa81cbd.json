{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvksn\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: ' ',\n      password: ' '\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nimport { googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\n\r\n\r\nimport './sign-in.styles.scss';\r\n\r\n\r\nclass SignIn extends React.Component {\r\n constructor(props)\r\n {\r\n  super(props);\r\n\r\n  this.state = {\r\n  email: ' '  ,\r\n  password: ' '  \r\n  }\r\n }\r\n\r\n handleSubmit = async event =>  {\r\n  event.preventDefault();\r\n  const { emailSignInStart} = this.props;\r\n   const { email , password } = this.state;\r\n\r\n    emailSignInStart(email, password);\r\n };\r\n\r\n handleChange = (event) => {\r\n  const {name,value} = event.target;\r\n\r\n  this.setState({ [name]: value })\r\n }\r\n\r\n render()\r\n {  const { googleSignInStart} = this.props;\r\n  return (\r\n   <div className='sign-in'>\r\n  <h2>I already have an account</h2>\r\n  <span>Sign in with your email and password</span>\r\n  <form onSubmit = {this.handleSubmit}>\r\n   <FormInput \r\n    name='email'\r\n    type='email'\r\n    handleChange={this.handleChange}\r\n    value={this.state.email}\r\n    label='email'\r\n    required\r\n   />\r\n   <FormInput \r\n    name='password'\r\n    type='password'\r\n    value={this.state.password}\r\n    handleChange={this.handleChange}\r\n    label='password'\r\n    required\r\n   />\r\n   <div className= 'buttons'>\r\n   <CustomButton \r\n    type= \"submit\">\r\n      Sign in\r\n  </CustomButton>\r\n  <CustomButton \r\n   type=\"button\"\r\n    onClick={ googleSignInStart}  isGoogleSignIn>\r\n      Sign in with Google\r\n  </CustomButton>\r\n  </div>\r\n  </form>\r\n   </div>\r\n  )\r\n }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  googleSignInStart :  ()  => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n   dispatch(emailSignInStart({ email, password}))\r\n})\r\nexport default connect(null , mapDispatchToProps)(SignIn);\r\n\r\n"]},"metadata":{},"sourceType":"module"}