{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSucess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSucess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSucess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,qBAAqB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBADkC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAI;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAJ,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAOC,QAAQ,IAAK;AACnB,UAAMC,aAAa,GAAId,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAvB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEEY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AACrC,YAAMZ,cAAc,GAAIL,+BAA+B,CAACiB,QAAD,CAAvD;AACAL,MAAAA,QAAQ,CAACR,qBAAqB,CAACC,cAAD,CAAtB,CAAR;AACE,KAHH,EAGKa,KAHL,CAGYC,KAAK,IAAGP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH5B;AAIF,GARD;AASA,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSucess = collectionsMap => ({\r\n type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage =>({\r\n type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n return dispatch =>  {\r\n  const collectionRef =  firestore.collection('collections');\r\n  dispatch(fetchCollectionsStart());\r\n       \r\n    collectionRef.get().then( snapshot => {\r\n     const collectionsMap =  convertCollectionsSnapshotToMap(snapshot);\r\n     dispatch(fetchCollectionSucess(collectionsMap));\r\n      }).catch( error=> dispatch(fetchCollectionsFailure(error.message)));\r\n }\r\n}"]},"metadata":{},"sourceType":"module"}