{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAqBC,IAArB,EAA4BC,GAA5B,QAAsC,oBAAtC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKC,OAAOC,eAAP,MAA4B,cAA5B;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACxC,MAAI;AACJ,UAAMC,aAAa,GAAIN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAvB;AACC,UAAMC,QAAQ,GAAI,MAAOF,aAAa,CAACG,GAAd,EAAzB;AACC,UAAMC,cAAc,GAAI,MAAMZ,IAAI,CAChCG,+BADgC,EAE/BO,QAF+B,CAAlC;AAID,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACA,GARD,CAQE,OAAMC,KAAN,EAAY;AACd,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACC;AACA;AAED,OAAQ,UAAUC,qBAAV,GAAkC;AACzC,QAAMhB,SAAS,CACdO,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery , call , put} from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\n import ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync(){\r\ntry {\r\nconst collectionRef =  firestore.collection('collections');\r\n const snapshot =  yield  collectionRef.get();\r\n  const collectionsMap =  yield call(\r\n    convertCollectionsSnapshotToMap,\r\n     snapshot\r\n     );\r\n yield put(fetchCollectionsSuccess(collectionsMap));\r\n} catch(error){\r\nyield put(fetchCollectionsFailure(error.message))\r\n}\r\n}\r\n\r\nexport  function* fetchCollectionsStart() {\r\n yield takeEvery(\r\n  ShopActionTypes.FETCH_COLLECTIONS_START, \r\n  fetchCollectionsAsync\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}