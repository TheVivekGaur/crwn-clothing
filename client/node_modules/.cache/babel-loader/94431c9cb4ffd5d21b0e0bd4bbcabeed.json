{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvksn\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStar\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: ' ',\n    email: ' ',\n    password: ' ',\n    confirmPassword: ' '\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials(...userCredentials, {\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 2\n    }\n  }, \" SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","signUpStar","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport  FormInput from '../form-input/form-input.component';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst  SignUp= ({signUpStar}) => {\r\n    \r\n  const [userCredentials, setCredentials] = useState({ displayName: ' ', email: ' ', password: ' ', confirmPassword:' '})\r\n  \r\n  const { displayName, email , password , confirmPassword} = userCredentials;\r\n  const  handleSubmit = async event => {\r\n   event.preventDefault();\r\n   \r\n   if( password !== confirmPassword) {\r\n   alert(\"passwords don't match\")\r\n   return;\r\n  }\r\n  signUpStart({ displayName, email , password});\r\n   };\r\n  const handleChange= event => {\r\n     const {name , value} = event.target;\r\n       setCredentials(...userCredentials, {[name] : value});\r\n  }\r\n\r\n return (\r\n  <div className='sign-up'>\r\n  <h2 className='title'>I do not have a account</h2>\r\n  <span>Sign up with your email and password</span>\r\n  \r\n  <form className='sign-up-form' onSubmit={handleSubmit}>\r\n  <FormInput \r\n  name='displayName'\r\n  type='text'\r\n  value={displayName}\r\n  onChange={handleChange}\r\n  label='Display Name'\r\n  required\r\n/ >\r\n\r\n  <FormInput \r\n   name='email'\r\n   type='email'\r\n   value={email}\r\n   onChange={handleChange}\r\n   label='Email'\r\n   required\r\n / >\r\n\r\n  <FormInput \r\n  name='password'\r\n  type='password'\r\n  value={password}\r\n  onChange={handleChange}\r\n  label='Password'\r\n  required\r\n / >\r\n \r\n  <FormInput \r\n  name='confirmPassword'\r\n  type='password'\r\n  value={confirmPassword}\r\n  onChange={handleChange}\r\n label='Confirm Password'\r\n  required\r\n / >\r\n <CustomButton type='submit' > SIGN UP</CustomButton> \r\n  </form>\r\n  </div>\r\n );\r\n} \r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  signUpStart: userCredentials => dispatch(signUpStart( userCredentials))\r\n})\r\n\r\n export default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}