{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,GAAtB,EAA4BC,GAA5B,EAAkCC,IAAlC,QAA8C,oBAA9C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAyBC,aAAzB,QAA6C,gBAA7C;AAEA,SAAUC,IAAV,EAAiBC,cAAjB,EAAkCC,yBAAlC,QAAmE,+BAAnE;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAElC,MAAI;AACE,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAOG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACF,UAAOd,GAAG,CACNe,mBAAmB,CAAE;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAwB,SAAGH,YAAY,CAACI,IAAb;AAA3B,KAAF,CADb,CAAV;AAGH,GAPD,CAOE,OAAMC,KAAN,EACF;AACI,UAAOlB,GAAG,CAACmB,mBAAmB,CAACD,KAAD,CAApB,CAAV;AACH;AACD;AAED,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAC/D,MAAG;AACH,UAAM;AAAEb,MAAAA;AAAF,QAAY,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAxB;AACA,UAAMX,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAOG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACE,UAAOd,GAAG,CACNyB,kBAAkB,CAAE;AAAET,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAwB,SAAGH,YAAY,CAACI,IAAb;AAA3B,KAAF,CADZ,CAAV;AAGD,GAPD,CAOE,OAAMC,KAAN,EAAY;AACd,UAAOlB,GAAG,CAAC0B,kBAAkB,CAACR,KAAD,CAAnB,CAAV;AACC;AACH;AAED,OAAO,UAAUS,mBAAV,GAA+B;AACtC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAwCnB,gBAAxC,CAAhB;AACC;AAED,OAAO,UAAUoB,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAuCV,eAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,SAAV,GAAqB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest , put , all , call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess , signInFailure} from './user.actions';\r\n\r\nimport  { auth , googleProvider , createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle(){\r\n\r\n try {\r\n       const { user } = yield auth.signInWithPopup(googleProvider);\r\n       const userRef = yield call(createUserProfileDocument, user);\r\n       const  userSnapshot = yield userRef.get();\r\n     yield  put(\r\n         googleSignInSuccess( { id: userSnapshot.id , ...userSnapshot.data() })\r\n         );\r\n } catch(error)\r\n {\r\n     yield  put(googleSignInFailure(error));\r\n }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n   try{\r\n   const { user } =  yield auth.signInWithEmailAndPassword(email, password);\r\n   const userRef = yield call(createUserProfileDocument, user);\r\n   const  userSnapshot = yield userRef.get();\r\n     yield  put(\r\n         emailSignInSuccess( { id: userSnapshot.id , ...userSnapshot.data() })\r\n         );     \r\n   } catch(error){\r\n   yield  put(emailSignInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\nyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START , signInWithGoogle );\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START , signInWithEmail)\r\n}\r\n\r\nexport function* userSagas(){\r\n yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}