{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyB4agIEENF8c59jEMMre45FDPQSbeV1nOo\",\n  authDomain: \"crwn-clothing-db-9f9e8.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-9f9e8.firebaseio.com\",\n  projectId: \"crwn-clothing-db-9f9e8\",\n  storageBucket: \"crwn-clothing-db-9f9e8.appspot.com\",\n  messagingSenderId: \"399378743825\",\n  appId: \"1:399378743825:web:c2cba472cda34081f4a7b0\",\n  measurementId: \"G-FQY7PK82WE\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionkey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionkey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n    console.log(newDocRef);\n  });\n  return await batch.commit();\n};\n\nconst convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/vvksn/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionkey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from  'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n apiKey: \"AIzaSyB4agIEENF8c59jEMMre45FDPQSbeV1nOo\",\r\n authDomain: \"crwn-clothing-db-9f9e8.firebaseapp.com\",\r\n databaseURL: \"https://crwn-clothing-db-9f9e8.firebaseio.com\",\r\n projectId: \"crwn-clothing-db-9f9e8\",\r\n storageBucket: \"crwn-clothing-db-9f9e8.appspot.com\",\r\n messagingSenderId: \"399378743825\",\r\n appId: \"1:399378743825:web:c2cba472cda34081f4a7b0\",\r\n measurementId: \"G-FQY7PK82WE\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\nif(!userAuth)  return ;\r\n\r\nconst userRef =  firestore.doc(`users/${userAuth.uid}`);\r\n\r\nconst snapShot =  await userRef.get();\r\n\r\n if(!snapShot.exists)\r\n {\r\n     const { displayName, email} = userAuth;\r\n     const createdAt = new Date ();\r\n\r\n     try {\r\n          await userRef.set({\r\n           displayName,\r\n           email,\r\n           createdAt,\r\n           ...additionalData\r\n          })\r\n     } catch (error)\r\n     {\r\n     console.log('error creating user', error.message);\r\n     }\r\n }\r\n return userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments =  async (collectionkey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionkey)\r\n    \r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj =>{\r\n        const newDocRef = collectionRef.doc();\r\n       batch.set(newDocRef, obj);\r\n        console.log(newDocRef);\r\n    });\r\n\r\n   return await  batch.commit();\r\n}; \r\n\r\nconst convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n        const { title, items} = doc.data();\r\n\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        }\r\n    })\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}